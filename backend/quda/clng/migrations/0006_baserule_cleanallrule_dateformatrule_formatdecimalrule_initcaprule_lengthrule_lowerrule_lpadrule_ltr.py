# Generated by Django 3.0.10 on 2020-12-04 05:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('clng', '0005_auto_20201203_2206'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'verbose_name': 'BaseRule',
                'verbose_name_plural': 'BaseRule',
                'permissions': [('Can_View__BaseRule', 'Ve baserule'), ('Can_Create__BaseRule', 'Crea baserule'), ('Can_Update__BaseRule', 'Modifica baserule'), ('Can_Delete__BaseRule', 'Elimina baserule')],
            },
        ),
        migrations.CreateModel(
            name='CleanAllRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'CleanAllRule',
                'verbose_name_plural': 'CleanAllRules',
                'permissions': [('Can_View__CleanAllRule', 'Ve cleanallrules'), ('Can_Create__CleanAllRule', 'Crea cleanallrules'), ('Can_Update__CleanAllRule', 'Modifica cleanallrules'), ('Can_Delete__CleanAllRule', 'Elimina cleanallrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='DateFormatRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('inputFormat', models.CharField(default='dd/MM/yyyy', max_length=50)),
                ('outputFormat', models.CharField(default='yyyyMMdd', max_length=50)),
            ],
            options={
                'verbose_name': 'DateFormatRule',
                'verbose_name_plural': 'DateFormatRules',
                'permissions': [('Can_View__DateFormatRule', 'Ve dateformatrules'), ('Can_Create__DateFormatRule', 'Crea dateformatrules'), ('Can_Update__DateFormatRule', 'Modifica dateformatrules'), ('Can_Delete__DateFormatRule', 'Elimina dateformatrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='FormatDecimalRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('decimal', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'FormatDecimalRule',
                'verbose_name_plural': 'FormatDecimalRules',
                'permissions': [('Can_View__FormatDecimalRule', 'Ve formatdecimalrules'), ('Can_Create__FormatDecimalRule', 'Crea formatdecimalrules'), ('Can_Update__FormatDecimalRule', 'Modifica formatdecimalrules'), ('Can_Delete__FormatDecimalRule', 'Elimina formatdecimalrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='InitCapRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'InitCapRule',
                'verbose_name_plural': 'InitCapRules',
                'permissions': [('Can_View__InitCapRule', 'Ve initcaprules'), ('Can_Create__InitCapRule', 'Crea initcaprules'), ('Can_Update__InitCapRule', 'Modifica initcaprules'), ('Can_Delete__InitCapRule', 'Elimina initcaprules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='LengthRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'LengthRule',
                'verbose_name_plural': 'LengthRules',
                'permissions': [('Can_View__LengthRule', 'Ve lengthrules'), ('Can_Create__LengthRule', 'Crea lengthrules'), ('Can_Update__LengthRule', 'Modifica lengthrules'), ('Can_Delete__LengthRule', 'Elimina lengthrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='LowerRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'LowerRule',
                'verbose_name_plural': 'LowerRules',
                'permissions': [('Can_View__LowerRule', 'Ve lowerrules'), ('Can_Create__LowerRule', 'Crea lowerrules'), ('Can_Update__LowerRule', 'Modifica lowerrules'), ('Can_Delete__LowerRule', 'Elimina lowerrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='LpadRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('length', models.IntegerField(default=0)),
                ('caracter', models.CharField(default='', max_length=500)),
            ],
            options={
                'verbose_name': 'LpadRule',
                'verbose_name_plural': 'LpadRules',
                'permissions': [('Can_View__LpadRule', 'Ve lpadrules'), ('Can_Create__LpadRule', 'Crea lpadrules'), ('Can_Update__LpadRule', 'Modifica lpadrules'), ('Can_Delete__LpadRule', 'Elimina lpadrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='LtrimRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'LtrimRule',
                'verbose_name_plural': 'LtrimRules',
                'permissions': [('Can_View__LtrimRule', 'Ve ltrimrules'), ('Can_Create__LtrimRule', 'Crea ltrimrules'), ('Can_Update__LtrimRule', 'Modifica ltrimrules'), ('Can_Delete__LtrimRule', 'Elimina ltrimrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='ParserNamedRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'ParserNamedRule',
                'verbose_name_plural': 'ParserNamedRules',
                'permissions': [('Can_View__ParserNamedRule', 'Ve parsernamedrules'), ('Can_Create__ParserNamedRule', 'Crea parsernamedrules'), ('Can_Update__ParserNamedRule', 'Modifica parsernamedrules'), ('Can_Delete__ParserNamedRule', 'Elimina parsernamedrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='ReplaceCaracterRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('search', models.CharField(default=0, max_length=500)),
                ('replace', models.CharField(default='', max_length=500)),
            ],
            options={
                'verbose_name': 'ReplaceCaracterRule',
                'verbose_name_plural': 'ReplaceCaracterRules',
                'permissions': [('Can_View__ReplaceCaracterRule', 'Ve replacecaracterrules'), ('Can_Create__ReplaceCaracterRule', 'Crea replacecaracterrules'), ('Can_Update__ReplaceCaracterRule', 'Modifica replacecaracterrules'), ('Can_Delete__ReplaceCaracterRule', 'Elimina replacecaracterrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='ReplaceWordRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('search', models.CharField(default='', max_length=500)),
                ('replace', models.CharField(default='', max_length=500)),
            ],
            options={
                'verbose_name': 'ReplaceWordRule',
                'verbose_name_plural': 'ReplaceWordRules',
                'permissions': [('Can_View__ReplaceWordRule', 'Ve replacewordrules'), ('Can_Create__ReplaceWordRule', 'Crea replacewordrules'), ('Can_Update__ReplaceWordRule', 'Modifica replacewordrules'), ('Can_Delete__ReplaceWordRule', 'Elimina replacewordrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='RpadRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('length', models.IntegerField(default=0)),
                ('caracter', models.CharField(default='', max_length=500)),
            ],
            options={
                'verbose_name': 'RpadRule',
                'verbose_name_plural': 'RpadRules',
                'permissions': [('Can_View__RpadRule', 'Ve rpadrules'), ('Can_Create__RpadRule', 'Crea rpadrules'), ('Can_Update__RpadRule', 'Modifica rpadrules'), ('Can_Delete__RpadRule', 'Elimina rpadrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='RtrimRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'RtrimRule',
                'verbose_name_plural': 'RtrimRules',
                'permissions': [('Can_View__RtrimRule', 'Ve rtrimrules'), ('Can_Create__RtrimRule', 'Crea rtrimrules'), ('Can_Update__RtrimRule', 'Modifica rtrimrules'), ('Can_Delete__RtrimRule', 'Elimina rtrimrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='SubstringMatchRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('patron', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'SubstringMatchRule',
                'verbose_name_plural': 'SubstringMatchRules',
                'permissions': [('Can_View__SubstringMatchRule', 'Ve substringmatchrules'), ('Can_Create__SubstringMatchRule', 'Crea substringmatchrules'), ('Can_Update__SubstringMatchRule', 'Modifica substringmatchrules'), ('Can_Delete__SubstringMatchRule', 'Elimina substringmatchrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='SubstringRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('init', models.IntegerField(default=0)),
                ('end', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'SubstringRule',
                'verbose_name_plural': 'SubstringRules',
                'permissions': [('Can_View__SubstringRule', 'Ve substringrules'), ('Can_Create__SubstringRule', 'Crea substringrules'), ('Can_Update__SubstringRule', 'Modifica substringrules'), ('Can_Delete__SubstringRule', 'Elimina substringrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='ToDateRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
                ('outputFormat', models.CharField(default='%m/%d/%Y', max_length=50)),
            ],
            options={
                'verbose_name': 'ToDateRule',
                'verbose_name_plural': 'ToDateRules',
                'permissions': [('Can_View__ToDateRule', 'Ve todaterules'), ('Can_Create__ToDateRule', 'Crea todaterules'), ('Can_Update__ToDateRule', 'Modifica todaterules'), ('Can_Delete__ToDateRule', 'Elimina todaterules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='ToIntegerRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'ToIntegerRule',
                'verbose_name_plural': 'ToIntegerRules',
                'permissions': [('Can_View__ToIntegerRule', 'Ve tointegerrules'), ('Can_Create__ToIntegerRule', 'Crea tointegerrules'), ('Can_Update__ToIntegerRule', 'Modifica tointegerrules'), ('Can_Delete__ToIntegerRule', 'Elimina tointegerrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='TrimRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'TrimRule',
                'verbose_name_plural': 'TrimRules',
                'permissions': [('Can_View__TrimRule', 'Ve trimrules'), ('Can_Create__TrimRule', 'Crea trimrules'), ('Can_Update__TrimRule', 'Modifica trimrules'), ('Can_Delete__TrimRule', 'Elimina trimrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
        migrations.CreateModel(
            name='UpperRule',
            fields=[
                ('baserule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clng.BaseRule')),
            ],
            options={
                'verbose_name': 'UpperRule',
                'verbose_name_plural': 'UpperRules',
                'permissions': [('Can_View__UpperRule', 'Ve upperrules'), ('Can_Create__UpperRule', 'Crea upperrules'), ('Can_Update__UpperRule', 'Modifica upperrules'), ('Can_Delete__UpperRule', 'Elimina upperrules')],
                'abstract': False,
            },
            bases=('clng.baserule',),
        ),
    ]
