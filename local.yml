version: '3'

volumes:
  portainer_data: {}
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: quda_local_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 9000:9000
      - 8002:8002
    restart: always
    logging:
      driver: none

  django: &django
    container_name: django
    image: quda_local_django
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app:z
    working_dir: /app
    env_file:
      - ./.envs/.local/.django
    ports:
      - "8001:8001"
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: /start

  redis:
    container_name: redis
    image: redis:5.0
    logging:
      driver: none

  mongo:
    container_name: mongo
    image: mongo:4.2

  celeryworker:
    <<: *django
    container_name: celeryworker
    image: quda_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker
    logging:
      driver: none

  celerybeat:
    <<: *django
    container_name: celerybeat
    image: quda_local_celerybeat
    depends_on:
      - redis
      - celeryworker
    ports: []
    command: /start-celerybeat
    logging:
      driver: none

  flower:
    <<: *django
    container_name: flower
    image: quda_local_flower
    depends_on:
      - celeryworker
    ports:
      - "5555:5555"
    command: /start-flower

  quasar:
    container_name: quasar
    image: quda_local_quasar
    working_dir: /app
    volumes:
      - ./quasar:/app:z
    env_file:
      - ./.envs/.local/.quasar
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: ./compose/local/quasar/Dockerfile
    command: npm run serve
    restart: on-failure

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "8081:80"
    depends_on:
      - django
      - quasar
    volumes:
      - ./quda/media/:/media/
      - ./quda/staticfiles/:/static/
      - ./nginx/local.conf:/etc/nginx/nginx.conf:ro
    restart: on-failure
    logging:
      driver: none
